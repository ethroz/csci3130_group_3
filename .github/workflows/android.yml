name: Run connected tests

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'The unique hash of the commit'
        required: true
      proj_id:
        description: 'The ID of the project'
        required: true
      job_id:
        description: 'The ID of the job'
        required: true

run-name: ${{ github.event.inputs.commit }}

env:
  JAVA_VERSION: 17

jobs:
  ConnectedTests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        api-level: [28, 29, 30, 31, 32, 33, 34]
      fail-fast: false
    steps:
      - uses: actions/setup-java@v4
        with:
            distribution: 'zulu'
            java-version: ${{ env.JAVA_VERSION }}

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set Arch
        id: set_arch
        run: |
          if [ "${{ matrix.api-level }}" -gt 30 ]; then
            echo "arch=x86_64" >> "$GITHUB_OUTPUT"
          else
            echo "arch=x86" >> "$GITHUB_OUTPUT"
          fi

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: ${{ steps.set_arch.outputs.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
